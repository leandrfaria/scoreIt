import { notFound } from "next/navigation";
import { isValidLocale } from "@/i18n/routing";
import { NextIntlClientProvider } from "next-intl";
import { Header } from "@/components/header";
import { MemberProvider } from "@/context/MemberContext";
import { Toaster } from "react-hot-toast";
import type { Metadata } from "next";
import { AuthProvider } from "@/context/AuthContext";
import "@/app/globals.css";

export const metadata: Metadata = {
  title: "ScoreIt",
  description: "Generated by create next app",
};

export default async function LocaleLayout({
  children,
  params: { locale },
}: {
  children: React.ReactNode;
  params: { locale: string };
}) {
  // Verificação de locale segura
  if (!isValidLocale(locale)) {
    notFound();
  }

  // Carrega as mensagens com tratamento de erro
  let messages;
  try {
    messages = (await import(`@/i18n/messages/${locale}.json`)).default;
  } catch (error) {
    console.error(`Failed to load messages for locale ${locale}`, error);
    notFound();
  }

  return (
    <MemberProvider>
      <html lang={locale}>
        <body>
          <AuthProvider>
            <NextIntlClientProvider 
              locale={locale}
              messages={messages}
            >
              <Header />
              <Toaster
                position="top-center"
                toastOptions={{
                  duration: 3000,
                  style: {
                    background: "#333",
                    color: "#fff",
                  },
                }}
              />
              {children}
            </NextIntlClientProvider>
          </AuthProvider>
        </body>
      </html>
    </MemberProvider>
  );
}
